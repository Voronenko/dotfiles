export_function() {
  local name=$1
  local alias_dir=$PWD/.direnv/aliases
  mkdir -p "$alias_dir"
  PATH_add "$alias_dir"
  local target="$alias_dir/$name"
  if declare -f "$name" >/dev/null; then
    echo "#!$SHELL" > "$target"
    declare -f "$name" >> "$target" 2>/dev/null
    # Notice that we add shell variables to the function trigger.
    echo "$name \$*" >> "$target"
    chmod +x "$target"
  fi
}

inherit_env() {
    local dir=$(pwd)
    dir=$(dirname "$dir")  # Start from the parent directory

    while [ "$dir" != "/" ]; do
        if [ -f "$dir/.envrc" ]; then
            echo "Loading .envrc from $dir"
            source "$dir/.envrc"
            return
        fi
        dir=$(dirname "$dir")
    done
}

export CURRENTENVRC=$(find_up .envrc)
export CURRENTENVRCDIR=$(dirname $CURRENTENVRC)

alias_dir=${CURRENTENVRCDIR:-$PWD}/.direnv/aliases
rm -rf "$alias_dir"

export_alias() {
  local name=$1
  shift
  local target="$alias_dir/$name"
  mkdir -p "$alias_dir"
  PATH_add "$alias_dir"
  echo "#!/usr/bin/env bash" > "$target"
  echo "$@ \"\$@\"" >> "$target"
  chmod +x "$target"
}

use_nodejs() {
    NODE_VERSION="$1"

    type nvm >/dev/null 2>&1 || . ~/.nvm/nvm.sh
    nvm use "$NODE_VERSION"
}

# Usage: load_env_from_pass "path/to/secret" "ENV_VAR_NAME"
load_env_from_pass() {
    local pass_entry="$1"
    local var_name="$2"
    
    if [ -z "$var_name" ]; then
        var_name=$(echo "$pass_entry" | tr '/' '_' | tr '[:lower:]' '[:upper:]')
    fi
    
    export "$var_name"="$(pass show "$pass_entry")"
    echo "Loaded $var_name from pass"
}


# envrc perks usage

#some-func() {
#    some-command $@
#}

#export_function some-command


#export_alias somealias "some shell command"
